# Многоэтапная сборка для минимизации размера образа

# Этап 1: Сборка и установка зависимостей
FROM node:18-alpine AS builder

WORKDIR /app

# Копируем файлы package.json
COPY package*.json ./

# Устанавливаем все зависимости (включая dev)
RUN npm ci

# Копируем исходный код
COPY . .

# Запускаем тесты (опционально)
# RUN npm test

# Удаляем dev зависимости
RUN npm prune --production

# Этап 2: Продакшн образ
FROM node:18-alpine AS production

# Устанавливаем wget для health checks
RUN apk add --no-cache wget

# Создаем пользователя без root привилегий
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Копируем только production зависимости и код
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./
COPY --chown=nodejs:nodejs . .

# Создаем необходимые директории
RUN mkdir -p downloads uploads && \
    chown -R nodejs:nodejs downloads uploads

# Переключаемся на непривилегированного пользователя
USER nodejs

# Открываем порт 3000
EXPOSE 3000

# Устанавливаем переменные окружения
ENV NODE_ENV=production
ENV PORT=3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3000/ || exit 1

# Команда для запуска приложения
CMD ["npm", "start"]